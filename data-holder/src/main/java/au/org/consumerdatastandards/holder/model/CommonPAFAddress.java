/*
 * Consumer Data Standards
 * Sample Data Holder to Demonstrate the Consumer Data Right APIs
 *
 * NOTE: This class is auto generated by the codegen artefact
 * https://github.com/ConsumerDataStandardsAustralia/java-artefacts/codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.holder.model;

import io.swagger.annotations.ApiModelProperty;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.MapsId;
import javax.persistence.OneToOne;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.GenericGenerator;

import java.time.OffsetDateTime;
import java.util.Objects;
import java.net.URI;
import java.lang.reflect.Field;
import java.util.List;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * CommonPAFAddress
 *
 * <p>
 * * Australian address formatted according to the file format defined by the
 * [PAF file
 * format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
 */
@Entity
public class CommonPAFAddress {
    @Id
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid2")
    private String commonPafAddressId;
    
    @OneToOne
    @MapsId
    private CommonPhysicalAddress physicalAddress;

    @OneToOne
    @MapsId
    private CommonPhysicalAddressWithPurpose physicalAddressWithPurpose;

    // Unique identifier for an address as defined by Australia
    // Post. Also known as Delivery Point Identifier
    @JsonProperty("dpid")
    private String dpid;
    // Thoroughfare number for a property (first number in a
    // property ranged address)
    @JsonProperty("thoroughfareNumber1")
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private Integer thoroughfareNumber1;
    // Suffix for the thoroughfare number. Only relevant is
    // thoroughfareNumber1 is populated
    @JsonProperty("thoroughfareNumber1Suffix")
    private String thoroughfareNumber1Suffix;
    // Second thoroughfare number (only used if the property has a
    // ranged address eg 23-25)
    @JsonProperty("thoroughfareNumber2")
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private Integer thoroughfareNumber2;
    // Suffix for the second thoroughfare number. Only relevant is
    // thoroughfareNumber2 is populated
    @JsonProperty("thoroughfareNumber2Suffix")
    private String thoroughfareNumber2Suffix;
    // Unit number (including suffix, if applicable)
    @JsonProperty("flatUnitNumber")
    private String flatUnitNumber;
    // Floor or level number (including alpha characters)
    @JsonProperty("floorLevelNumber")
    private String floorLevelNumber;
    // Allotment number for the address
    @JsonProperty("lotNumber")
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private Integer lotNumber;
    // Building/Property name 1
    @JsonProperty("buildingName1")
    private String buildingName1;
    // Building/Property name 2
    @JsonProperty("buildingName2")
    private String buildingName2;
    // The name of the street
    @JsonProperty("streetName")
    private String streetName;
    // The street type. Valid enumeration defined by Australia Post
    // PAF code file
    @JsonProperty("streetType")
    private String streetType;
    // The street type suffix. Valid enumeration defined by
    // Australia Post PAF code file
    @JsonProperty("streetSuffix")
    private String streetSuffix;
    // Postal delivery type. (eg. PO BOX). Valid enumeration
    // defined by Australia Post PAF code file
    @JsonProperty("postalDeliveryType")
    private String postalDeliveryType;
    // Postal delivery number if the address is a postal delivery
    // type
    @JsonProperty("postalDeliveryNumber")
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private Integer postalDeliveryNumber;
    // Postal delivery number prefix related to the postal delivery
    // number
    @JsonProperty("postalDeliveryNumberPrefix")
    private String postalDeliveryNumberPrefix;
    // Postal delivery number suffix related to the postal delivery
    // number
    @JsonProperty("postalDeliveryNumberSuffix")
    private String postalDeliveryNumberSuffix;
    // Full name of locality
    @JsonProperty("localityName")
    private String localityName;
    // Postcode for the locality
    @JsonProperty("postcode")
    private String postcode;
    // State in which the address belongs. Valid enumeration
    // defined by Australia Post PAF code file
    @JsonProperty("state")
    private String state;

    public String getDpid() {
        return dpid;
    }

    public void setDpid(String dpid) {
        this.dpid = dpid;
    }

    public Integer getThoroughfareNumber1() {
        return thoroughfareNumber1;
    }

    public void setThoroughfareNumber1(Integer thoroughfareNumber1) {
        this.thoroughfareNumber1 = thoroughfareNumber1;
    }

    public String getThoroughfareNumber1Suffix() {
        return thoroughfareNumber1Suffix;
    }

    public void setThoroughfareNumber1Suffix(String thoroughfareNumber1Suffix) {
        this.thoroughfareNumber1Suffix = thoroughfareNumber1Suffix;
    }

    public Integer getThoroughfareNumber2() {
        return thoroughfareNumber2;
    }

    public void setThoroughfareNumber2(Integer thoroughfareNumber2) {
        this.thoroughfareNumber2 = thoroughfareNumber2;
    }

    public String getThoroughfareNumber2Suffix() {
        return thoroughfareNumber2Suffix;
    }

    public void setThoroughfareNumber2Suffix(String thoroughfareNumber2Suffix) {
        this.thoroughfareNumber2Suffix = thoroughfareNumber2Suffix;
    }

    public String getFlatUnitNumber() {
        return flatUnitNumber;
    }

    public void setFlatUnitNumber(String flatUnitNumber) {
        this.flatUnitNumber = flatUnitNumber;
    }

    public String getFloorLevelNumber() {
        return floorLevelNumber;
    }

    public void setFloorLevelNumber(String floorLevelNumber) {
        this.floorLevelNumber = floorLevelNumber;
    }

    public Integer getLotNumber() {
        return lotNumber;
    }

    public void setLotNumber(Integer lotNumber) {
        this.lotNumber = lotNumber;
    }

    public String getBuildingName1() {
        return buildingName1;
    }

    public void setBuildingName1(String buildingName1) {
        this.buildingName1 = buildingName1;
    }

    public String getBuildingName2() {
        return buildingName2;
    }

    public void setBuildingName2(String buildingName2) {
        this.buildingName2 = buildingName2;
    }

    public String getStreetName() {
        return streetName;
    }

    public void setStreetName(String streetName) {
        this.streetName = streetName;
    }

    public String getStreetType() {
        return streetType;
    }

    public void setStreetType(String streetType) {
        this.streetType = streetType;
    }

    public String getStreetSuffix() {
        return streetSuffix;
    }

    public void setStreetSuffix(String streetSuffix) {
        this.streetSuffix = streetSuffix;
    }

    public String getPostalDeliveryType() {
        return postalDeliveryType;
    }

    public void setPostalDeliveryType(String postalDeliveryType) {
        this.postalDeliveryType = postalDeliveryType;
    }

    public Integer getPostalDeliveryNumber() {
        return postalDeliveryNumber;
    }

    public void setPostalDeliveryNumber(Integer postalDeliveryNumber) {
        this.postalDeliveryNumber = postalDeliveryNumber;
    }

    public String getPostalDeliveryNumberPrefix() {
        return postalDeliveryNumberPrefix;
    }

    public void setPostalDeliveryNumberPrefix(String postalDeliveryNumberPrefix) {
        this.postalDeliveryNumberPrefix = postalDeliveryNumberPrefix;
    }

    public String getPostalDeliveryNumberSuffix() {
        return postalDeliveryNumberSuffix;
    }

    public void setPostalDeliveryNumberSuffix(String postalDeliveryNumberSuffix) {
        this.postalDeliveryNumberSuffix = postalDeliveryNumberSuffix;
    }

    public String getLocalityName() {
        return localityName;
    }

    public void setLocalityName(String localityName) {
        this.localityName = localityName;
    }

    public String getPostcode() {
        return postcode;
    }

    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        CommonPAFAddress inputModel = (CommonPAFAddress) o;
        if (!(dpid.equals(inputModel.getDpid()))) {
            return false;
        }
        if (!(thoroughfareNumber1.equals(inputModel.getThoroughfareNumber1()))) {
            return false;
        }
        if (!(thoroughfareNumber1Suffix.equals(inputModel.getThoroughfareNumber1Suffix()))) {
            return false;
        }
        if (!(thoroughfareNumber2.equals(inputModel.getThoroughfareNumber2()))) {
            return false;
        }
        if (!(thoroughfareNumber2Suffix.equals(inputModel.getThoroughfareNumber2Suffix()))) {
            return false;
        }
        if (!(flatUnitNumber.equals(inputModel.getFlatUnitNumber()))) {
            return false;
        }
        if (!(floorLevelNumber.equals(inputModel.getFloorLevelNumber()))) {
            return false;
        }
        if (!(lotNumber.equals(inputModel.getLotNumber()))) {
            return false;
        }
        if (!(buildingName1.equals(inputModel.getBuildingName1()))) {
            return false;
        }
        if (!(buildingName2.equals(inputModel.getBuildingName2()))) {
            return false;
        }
        if (!(streetName.equals(inputModel.getStreetName()))) {
            return false;
        }
        if (!(streetType.equals(inputModel.getStreetType()))) {
            return false;
        }
        if (!(streetSuffix.equals(inputModel.getStreetSuffix()))) {
            return false;
        }
        if (!(postalDeliveryType.equals(inputModel.getPostalDeliveryType()))) {
            return false;
        }
        if (!(postalDeliveryNumber.equals(inputModel.getPostalDeliveryNumber()))) {
            return false;
        }
        if (!(postalDeliveryNumberPrefix.equals(inputModel.getPostalDeliveryNumberPrefix()))) {
            return false;
        }
        if (!(postalDeliveryNumberSuffix.equals(inputModel.getPostalDeliveryNumberSuffix()))) {
            return false;
        }
        if (!(localityName.equals(inputModel.getLocalityName()))) {
            return false;
        }
        if (!(postcode.equals(inputModel.getPostcode()))) {
            return false;
        }
        if (!(state.equals(inputModel.getState()))) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        return Objects.hash(dpid, thoroughfareNumber1, thoroughfareNumber1Suffix, thoroughfareNumber2,
                thoroughfareNumber2Suffix, flatUnitNumber, floorLevelNumber, lotNumber, buildingName1, buildingName2,
                streetName, streetType, streetSuffix, postalDeliveryType, postalDeliveryNumber,
                postalDeliveryNumberPrefix, postalDeliveryNumberSuffix, localityName, postcode, state);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(String.format("class %s {\n", getClass()));

        for (Field oneField : getClass().getFields()) {
            oneField.setAccessible(true);
            try {
                sb.append(String.format("    %s: %s\n", oneField.getName(), (oneField.get(Object.class) == null ? "null"
                        : oneField.get(Object.class).toString().replace("\n", "\n    "))));
            } catch (IllegalArgumentException | IllegalAccessException e) {
                // I guess we won't print it
                sb.append(String.format("    %s, [unreadable]\n", oneField.getName()));
            }
        }
        sb.append("}");
        return sb.toString();
    }
}
