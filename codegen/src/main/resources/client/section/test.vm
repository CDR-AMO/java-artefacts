#include("java-common/header.vm")
package $packageName;

import ${modelPackage}.*;
import okhttp3.Call;
import okhttp3.HttpUrl;
import okhttp3.Request;
import org.junit.Test;
import org.junit.Ignore;
import ${apiPackage}.${interfaceName};
import java.util.List;
import static org.junit.Assert.*;

/**
 * API tests for $interfaceName
 */
public class ${interfaceName}Test {

    private final ${interfaceName} api = new ${interfaceName}();

#foreach($endpoint in $cds.getEndpointModels())
    #parse("common/endpointdefinition.vm")

    /**
     * $endpointSummary
     * #if($endpointDescription)
     * $WordUtils.wrap($endpointDescription, 60, "
     * ", false)
     * #end
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ${endpointOperationId}Test() throws ApiException {
    #foreach($oneParam in $endpoint.getPathParams())
        $oneParam.getParamDataType().getSimpleName() $oneParam.getCamelCaseName() = null;
    #end
    #foreach($oneParam in $endpoint.getQueryParams())
        $oneParam.getParamDataType().getSimpleName() $oneParam.getCamelCaseName() = null;
    #end
    
     Call call = api.${endpointOperationId}Async(#foreach($oneParam in $endpoint.getPathParams())
            $oneParam.getCamelCaseName()#if( $foreach.hasNext ),#end
        #end
        #if($endpoint.getPathParams() and $endpoint.getPathParams().size() > 0 and $endpoint.getQueryParams() and $endpoint.getQueryParams().size() > 0),#end
        #foreach($oneParam in $endpoint.getQueryParams())
            $oneParam.getCamelCaseName()#if( $foreach.hasNext ),#end
        #end
        
    , null);
    
    
    Request request = call.request();
    basicCheck(request);
    HttpUrl url = request.url();
#foreach($oneParam in $endpoint.getQueryParams())
    assertEquals($oneParam.getCamelCaseName(), url.queryParameter("$oneParam.name()"));
#end

    }

#end

    /**
     * Basic checks of request parameters
     */
    private void basicCheck(Request request) {
        assertEquals("application/json", request.header("Accept"));
        assertEquals("application/json", request.header("Content-Type"));
        assertEquals("GET", request.method());
    }
}
